const set_compile_types=function(r,t){function c(o){let n=0;const s=()=>o[n++],u=()=>o[n],a=()=>n+1>=o.length?-1:o[n+1],e=()=>{for(;-1!=a()&&u().match(/\s/);)s()},t=e=>{let r=o[n-1],t=0,c=0;switch(e){case"STRING":for(r="",c=1;u().match(/[^\'\"]/)&&-1!=a();)r+=s();if(-1==a()&&u().match(/[^\'\"]/))throw"Quotes must have a closing pair.";s();break;case"WORD":for(;u().match(/\S/)&&-1!=a();)r+=s();-1==a()&&(r+=s());break;case"END":return[];case"label":for(r="";u().match(/[^\:]/)&&-1!=a();)r+=s();return s(),[i(r)]}return r.match(/^[\d\.]+$/)&&"STRING"!=e?(t=f("number"),r=Number(r),c=1):t=f("string"),[r,t,c]};{let r={previous:[],current:[],code:[]};const h=()=>{r.previous=r.current,r.current=(()=>{if(e(),-1==a())return t("END");switch(s()){case'"':case"'":return t("STRING");case"@":return t("label");default:return t("WORD")}})()},l=e=>r.current.length==e;var c=()=>!!l(0)&&(h(),!0);for(h();!c();)l(3)&&1!=r.previous.length&&r.code.push(0),r.code.push(...r.current),h();if(r.code.length%4!=0)throw"Incorrect code generated.";return r.code}}const i=e=>r[e]||console.error("No such label "+e),f=e=>t[e]||console.error("No such type "+l);return e=>c(e)};
